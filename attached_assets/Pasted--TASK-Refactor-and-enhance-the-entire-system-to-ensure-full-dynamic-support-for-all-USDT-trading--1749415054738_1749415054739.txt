üîß TASK:
Refactor and enhance the entire system to ensure full dynamic support for all USDT trading pairs available on OKX, across both Spot and Futures markets. All models, dashboards, and decision systems must automatically adapt to any USDT pair without requiring hardcoded symbols.

üìä OBJECTIVES:

1. ‚úÖ Universal Market Coverage:
   ‚Ä¢ Automatically fetch full list of all Spot and Futures symbols ending with `USDT`
   ‚Ä¢ Ensure symbol discovery updates daily (or via manual refresh)
   ‚Ä¢ Maintain separate symbol lists: `/markets/spot` and `/markets/futures`

2. ‚úÖ Full System Compatibility:
   ‚Ä¢ Ensure every core module (AI models, technical indicators, risk engine, backtester, signal generators, dashboards) works with **any pair dynamically**
   ‚Ä¢ Eliminate all hardcoded symbol references
   ‚Ä¢ Use `symbol_id` abstraction across all systems

3. ‚úÖ Dynamic AI & Strategy Execution:
   ‚Ä¢ Train and predict using AI models per symbol
   ‚Ä¢ Auto-config strategy per pair based on volume, volatility, and spread
   ‚Ä¢ Futures-specific handling:
     - Leverage detection and margin type
     - Separate TP/SL logic from Spot logic

4. ‚úÖ Multi-Market Architecture:
   ‚Ä¢ `/spot-engine/`: Handles real-time trading logic for spot pairs
   ‚Ä¢ `/futures-engine/`: Dedicated futures logic with funding rate handling
   ‚Ä¢ Add market tag: `market_type = "spot" | "futures"` in all logs and executions

5. ‚úÖ UI and Monitoring Updates:
   ‚Ä¢ Update dropdowns and dashboards to support all USDT pairs
   ‚Ä¢ Allow filtering by market type, volume, volatility
   ‚Ä¢ Visual performance by pair on portfolio and analytics pages

6. ‚úÖ Risk Management Enhancements:
   ‚Ä¢ Different position sizing logic for Futures (e.g., based on leverage)
   ‚Ä¢ Distinct drawdown limits for Spot vs. Futures
   ‚Ä¢ Monitor funding rates and exposure for futures contracts

üìò API ENDPOINTS:
‚Ä¢ `GET /api/markets/spot` ‚Üí All available USDT Spot pairs
‚Ä¢ `GET /api/markets/futures` ‚Üí All available USDT Futures pairs
‚Ä¢ `POST /api/trade/execute` ‚Üí Accepts symbol and market type
‚Ä¢ `GET /api/portfolio/overview?symbol=ADA-USDT&market=futures`

‚öôÔ∏è CONSTRAINTS:
‚Ä¢ All components must inherit support for any USDT pair automatically
‚Ä¢ Do not duplicate modules for each symbol ‚Äî reuse with parameter injection
‚Ä¢ Maintain separation between Spot and Futures logic where needed
‚Ä¢ Ensure real-time streaming, analytics, AI training, and trade execution all use dynamic pair discovery

‚úÖ FINAL OUTPUT EXPECTATION:
‚Ä¢ Fully dynamic trading system supporting 100% of OKX‚Äôs USDT market (Spot & Futures)
‚Ä¢ All core features work per symbol: AI, strategies, analytics, execution
‚Ä¢ No need to hardcode or manually add new pairs ‚Äî system adapts
‚Ä¢ Dashboard supports global portfolio view and per-market analysis