üîß TASK:
Enhance the existing AI-powered trading system by integrating dynamic model optimization and adaptive behavior, using all existing components. Do not replace or duplicate prior systems ‚Äî only extend the current AI/ML architecture.

üéØ OBJECTIVE:
Improve long-term performance by adding automated retraining optimizers, real-time model switching based on performance, and hybrid signal blending for smarter trade decisions.

üß† FEATURES TO IMPLEMENT:

1. ‚úÖ Adaptive Model Selector:
   - Add a real-time module that evaluates all AI models (LSTM, Prophet, GradientBoost, FreqAI)
   - Selects the best-performing model per symbol every 6 hours
   - Criteria: last N trades' win rate, drawdown, execution latency

2. ‚úÖ AI Performance Tracker:
   - Create a component that:
     ‚Ä¢ Logs model performance stats: accuracy, latency, PnL impact
     ‚Ä¢ Stores them in lightweight DB or in-memory cache
     ‚Ä¢ Exposes results to `/api/ai/performance/<symbol>`

3. ‚úÖ Hybrid Signal Engine:
   - Combine top 2 performing models to generate a blended decision:
     ‚Ä¢ If both agree: high-confidence trade
     ‚Ä¢ If conflict: abstain or defer to Smart Strategy Selector
   - Confidence-weighted blending recommended

4. ‚úÖ Retraining Optimizer:
   - Monitor dataset growth and trigger retraining when:
     ‚Ä¢ 10% new data added since last train
     ‚Ä¢ Performance drops below defined threshold
   - Use existing training pipelines (do not rewrite them)

5. ‚úÖ UI Enhancement:
   - Add AI Performance Summary panel on the dashboard:
     ‚Ä¢ Show currently active model per pair
     ‚Ä¢ Display past 24h performance (win rate, trades taken)
     ‚Ä¢ Add tags: ‚ÄúAdaptive‚Äù, ‚ÄúHybrid Mode‚Äù, ‚ÄúModel Switched‚Äù

‚ö†Ô∏è CONSTRAINTS:
‚Ä¢ Use current model implementations (no re-imports or replacements)
‚Ä¢ Leverage existing feature pipelines and data handlers
‚Ä¢ No sandbox/test data usage
‚Ä¢ Avoid introducing new dependencies unless absolutely required

‚úÖ Example Output (from /api/ai/performance/ETH-USDT):

{
  "symbol": "ETH-USDT",
  "active_model": "LSTM",
  "win_rate": 74,
  "confidence_avg": 81,
  "last_switch": "2025-06-07T22:00:00Z",
  "hybrid_mode": true,
  "models_considered": ["LSTM", "GradientBoost"]
}

Once each module is added and integrated, please confirm so I can validate the results and move to the next phase.